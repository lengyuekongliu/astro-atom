---
import { type CollectionEntry } from "astro:content";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts } from "@/data/post";
import PageLayout from "@/layouts/PageLayout.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";
import Paginator from "@/components/Paginator.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const MAX_POSTS_PER_PAGE = 10;
  const allPosts = await getAllPosts();
  return paginate(allPosts.sort(collectionDateSort), {
    pageSize: MAX_POSTS_PER_PAGE,
    props: { allPosts },
  });
}) satisfies GetStaticPaths;

interface Props {
  page: Page<CollectionEntry<"post">>;
  uniqueTags: string[];
}

const { page } = Astro.props;

const paginationProps = {
  ...(page.url.prev && {
    prevUrl: {
      text: "上一页",
      url: page.url.prev,
    },
  }),
  ...(page.url.next && {
    nextUrl: {
      text: "下一页",
      url: page.url.next,
    },
  }),
};
---

<PageLayout meta={{}}>
  <section aria-label="Blog post list" class="'mt-[-100vh] pt-[100vh]'">
    <ul class="space-y-4 md:space-y-2" role="list">
      {
        page.data.map((p) => (
          <li class="grid gap-2 sm:grid-cols-[auto_1fr] sm:[&_q]:col-start-2 onload-animation">
            <PostPreview post={p} />
          </li>
        ))
      }
    </ul>
  </section>
  <div class="pt-8 onload-animation">
    <Paginator {...paginationProps} />
  </div>
</PageLayout>
