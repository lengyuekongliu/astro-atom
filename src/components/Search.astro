---
// Heavy inspiration taken from Astro Starlight -> https://github.com/withastro/starlight/blob/main/packages/starlight/components/Search.astro

import "@pagefind/default-ui/css/ui.css";
import { Icon } from "astro-icon/components";
---

<site-search class="ms-auto" id="search">
	<button
		class="flex h-8 w-8 items-center justify-center rounded-lg drop-shadow-[0px_1.5px_1.5px_rgba(0,0,0,0.175)] hover:text-accent-two cursor-pointer"
		data-open-modal
		disabled
	>
		<Icon
			aria-hidden="true"
			class="h-6 w-6"
			focusable="false"
			name="material-symbols:search-rounded"
		/>
	</button>

	<dialog
		aria-label="search"
		class="h-full max-h-full w-full max-w-full md:h-fit bg-bgColor backdrop:backdrop-blur-xl md:my-8 md:min-h-[6.5rem] md:w-5/6 md:max-w-[44rem] md:rounded-lg overflow-y-hidden md:mx-auto"
	>
		<div
			class="dialog-frame flex flex-col h-[100%] px-4 pt-4 pb-4 md:px-8 md:py-8 gap-4"
		>
			<div
				class="md:hidden sticky top-0 z-20 flex items-center justify-between bg-bgColor"
			>
				<h4 class="title flex items-end font-semibold">Search</h4>
				<button
					class="flex size-8 cursor-pointer items-center justify-center rounded-lg bg-color-100 text-textColor hover:text-accent-base hover:bg-accent-base/5"
					data-close-modal
				>
					<Icon
						aria-hidden="true"
						class="h-6 w-6"
						focusable="false"
						name="material-symbols:search-rounded"
					/>
				</button>
			</div>

			{
				import.meta.env.DEV ? (
					<div class="mx-auto text-center text-textColor">
						<p>
							Search is only available in production builds.{" "}
							<br />
							Try building and previewing the site to test it out
							locally.
						</p>
					</div>
				) : (
					<div class="search-container h-full">
						<div id="citrus__search" />
					</div>
				)
			}
		</div>
	</dialog>
</site-search>

<script>
	class SiteSearch extends HTMLElement {
		private closeBtn: HTMLButtonElement;
		private dialog: HTMLDialogElement;
		private dialogFrame: HTMLDivElement;
		private openBtn: HTMLButtonElement;

		closeModal = () => {
			if (this.dialog.open) {
				this.dialog.close();
				document.body.classList.remove("overflow-hidden");
				window.removeEventListener("click", this.onWindowClick);
			}
		};

		onWindowClick = (event: MouseEvent) => {
			// Check if it's a link
			const isLink = "href" in (event.target || {});
			// Make sure the click is either a link or outside of the dialog
			if (
				isLink ||
				(document.body.contains(event.target as Node) &&
					!this.dialogFrame.contains(event.target as Node))
			)
				this.closeModal();
		};

		onWindowKeydown = (e: KeyboardEvent) => {
			// Check if it's the / key
			if (e.key === "/" && !this.dialog.open) {
				this.openModal();
				e.preventDefault();
			}
		};

		openModal = (event?: MouseEvent) => {
			this.dialog.showModal();
			document.body.classList.add("overflow-hidden");
			this.querySelector("input")?.focus();
			event?.stopPropagation();
			window.addEventListener("click", this.onWindowClick);
		};

		constructor() {
			super();
			this.openBtn = this.querySelector<HTMLButtonElement>(
				"button[data-open-modal]",
			)!;
			this.closeBtn = this.querySelector<HTMLButtonElement>(
				"button[data-close-modal]",
			)!;
			this.dialog = this.querySelector("dialog")!;
			this.dialogFrame = this.querySelector(".dialog-frame")!;

			this.openBtn.addEventListener("click", this.openModal);
			this.openBtn.disabled = false;
			this.closeBtn.addEventListener("click", this.closeModal);
		}

		connectedCallback() {
			// Listen for keyboard shortcut
			window.addEventListener("keydown", this.onWindowKeydown);

			// Only add pagefind in production
			if (import.meta.env.DEV) return;
			const onIdle =
				window.requestIdleCallback || ((cb) => setTimeout(cb, 1));
			onIdle(async () => {
				const { PagefindUI } = await import("@pagefind/default-ui");
				new PagefindUI({
					baseUrl: import.meta.env.BASE_URL,
					bundlePath:
						import.meta.env.BASE_URL.replace(/\/$/, "") +
						"/pagefind/",
					element: "#citrus__search",
					showImages: false,
					showSubResults: true,
				});
			});
		}

		disconnectedCallback() {
			window.removeEventListener("keydown", this.onWindowKeydown);
		}
	}

	customElements.define("site-search", SiteSearch);
</script>

<style is:global>
	/* Global styles */
	:root {
		--pagefind-ui-border-radius: 0.5rem; /* 8px */
	}

	#citrus__search {
		--pagefind-ui-primary: var(--color-accent-two);
		--pagefind-ui-text: var(--color-textColor);
		--pagefind-ui-background: var(--color-bgColor);
		--pagefind-ui-border: var(--color-color-400);
		height: 100%;
	}

	#citrus__search .pagefind-ui {
		width: 100%;
		height: 100%;
		color: var(--color-textColor);
		font-family: sans-serif;
	}

	#citrus__search .pagefind-ui__hidden {
		display: none;
	}

	#citrus__search .pagefind-ui__suppressed {
		opacity: 0;
		pointer-events: none;
	}

	#citrus__search .pagefind-ui__form {
		position: relative;
		height: 100%;
	}

	#citrus__search .pagefind-ui__form::before {
		position: absolute;
		pointer-events: none;
		display: block;
		opacity: 0.7;
		z-index: 10;
		width: 1rem;
		height: 1rem;
		top: 0.75rem;
		left: 0.75rem;
		content: "";
		-webkit-mask-image: url("data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12.7549 11.255H11.9649L11.6849 10.985C12.6649 9.845 13.2549 8.365 13.2549 6.755C13.2549 3.165 10.3449 0.255005 6.75488 0.255005C3.16488 0.255005 0.254883 3.165 0.254883 6.755C0.254883 10.345 3.16488 13.255 6.75488 13.255C8.36488 13.255 9.84488 12.665 10.9849 11.685L11.2549 11.965V12.755L16.2549 17.745L17.7449 16.255L12.7549 11.255ZM6.75488 11.255C4.26488 11.255 2.25488 9.245 2.25488 6.755C2.25488 4.26501 4.26488 2.255 6.75488 2.255C9.24488 2.255 11.2549 4.26501 11.2549 6.755C11.2549 9.245 9.24488 11.255 6.75488 11.255Z' fill='%23000000'/%3E%3C/svg%3E%0A");
		mask-image: url("data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12.7549 11.255H11.9649L11.6849 10.985C12.6649 9.845 13.2549 8.365 13.2549 6.755C13.2549 3.165 10.3449 0.255005 6.75488 0.255005C3.16488 0.255005 0.254883 3.165 0.254883 6.755C0.254883 10.345 3.16488 13.255 6.75488 13.255C8.36488 13.255 9.84488 12.665 10.9849 11.685L11.2549 11.965V12.755L16.2549 17.745L17.7449 16.255L12.7549 11.255ZM6.75488 11.255C4.26488 11.255 2.25488 9.245 2.25488 6.755C2.25488 4.26501 4.26488 2.255 6.75488 2.255C9.24488 2.255 11.2549 4.26501 11.2549 6.755C11.2549 9.245 9.24488 11.255 6.75488 11.255Z' fill='%23000000'/%3E%3C/svg%3E%0A");
		-webkit-mask-size: 100%;
		mask-size: 100%;
	}

	#citrus__search .pagefind-ui__search-input {
		background-color: var(--color-color-100);
		border-radius: 0.5rem;
		border: none;
		font-size: 1rem;
		color: var(--color-textColor);
		font-weight: 400;
		width: 100%;
		display: flex;
		height: 2.5rem;
		padding: 0 2.5rem;
		outline: none;
	}

	#citrus__search .pagefind-ui__search-input::placeholder {
		opacity: 0.2;
	}

	#citrus__search .pagefind-ui__search-clear::before {
		background-color: var(--color-accent-two);
		display: block;
		width: 100%;
		height: 100%;
		content: "";
		-webkit-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' %3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M6 18L18 6M6 6l12 12'%3E%3C/path%3E%3C/svg%3E")
			center / 60% no-repeat;
		mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' %3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M6 18L18 6M6 6l12 12'%3E%3C/path%3E%3C/svg%3E")
			center / 60% no-repeat;
	}

	#citrus__search .pagefind-ui__search-clear {
		overflow: hidden;
		position: absolute;
		top: 0;
		right: 0;
		width: 2.5rem;
		height: 2.5rem;
		padding: 0;
		color: var(--color-textColor);
		font-weight: 500;
		cursor: pointer;
		background-color: transparent;
		border-radius: 0.5rem;
	}

	#citrus__search .pagefind-ui__search-clear:focus {
		/* Доработать */
	}

	#citrus__search .pagefind-ui__drawer {
		display: flex;
		flex-wrap: wrap;
		height: 100%;
		padding-bottom: 0;
		margin: auto;
	}

	@media (min-width: 768px) {
		#citrus__search .pagefind-ui__drawer {
			height: calc(100vh - 10.5rem);
		}
	}

	#citrus__search .pagefind-ui__message {
		font-size: 1rem;
		font-weight: 400;
		color: var(--color-lighter);
		height: 2.5rem;
		padding: 0;
		display: flex;
		align-items: center;
		border: none;
	}

	#citrus__search .pagefind-ui__button {
		position: absolute;
		bottom: 0;
		margin: 0;
		box-shadow:
			0 4px 6px -1px rgba(0, 0, 0, 0.1),
			0 2px 4px -1px rgba(0, 0, 0, 0.06);
		border: none;
		color: var(--color-bgColor);
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 0.5rem;
		height: 2.5rem;
		padding: 0 0.5rem;
		font-size: 1rem;
		text-align: center;
		font-weight: 500;
		cursor: pointer;
		background-color: var(--color-accent-base);
	}

	#citrus__search .pagefind-ui__button:hover {
		filter: brightness(1.1);
	}

	#citrus__search .pagefind-ui__result {
		border: none;
		padding: 0;
		margin-bottom: 2rem;
	}

	#citrus__search .pagefind-ui__result:last-of-type {
		margin-bottom: 0;
	}

	#citrus__search .pagefind-ui__result-link {
		font-size: 1rem;
		background-color: transparent;
		color: var(--color-accent-base);
		font-weight: 500;
	}

	#citrus__search .pagefind-ui__result-link:hover {
		/* Доработать */
	}

	#citrus__search .pagefind-ui__result-nested {
		padding-left: 1rem;
	}

	#citrus__search .pagefind-ui__result-nested:first-of-type {
		padding-top: 0;
	}

	#citrus__search .pagefind-ui__result-excerpt {
		display: inline-block;
		font-weight: 400;
		font-size: 1rem;
		color: var(--color-textColor);
		margin-top: 0;
		margin-bottom: 0;
		margin-right: 0.5rem;
	}

	@media (min-width: 768px) {
		#citrus__search .pagefind-ui__result-excerpt {
			display: -webkit-box;
			-webkit-line-clamp: 1;
			-webkit-box-orient: vertical;
			overflow: hidden;
		}
	}

	#citrus__search .pagefind-ui__result-inner {
		flex: 1;
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		margin-top: 0;
	}

	#citrus__search .pagefind-ui__results {
		padding: 0;
		color: var(--color-textColor);
		font-size: 1rem;
		max-height: calc(100vh - 13.5rem);
		overflow-y: auto;
	}

	@media (min-width: 768px) {
		#citrus__search .pagefind-ui__results {
			max-height: calc(100vh - 13rem);
		}
	}

	#citrus__search .pagefind-ui__results-area {
		flex: 1;
		margin-top: 0;
		margin-bottom: 0;
	}

	#citrus__search mark {
		color: var(--color-accent-two);
		background-color: transparent;
	}
</style>
