---
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";
import Badge from "./Badge.astro";

interface Props {
  content: CollectionEntry<"post">;
}

const dateTimeOptions: Intl.DateTimeFormatOptions = {
  year: "numeric",
  month: "long",
  day: "2-digit",
};

const { content } = Astro.props;
---

<div class="md:top-8 md:z-10 flex items-end">
  <button
    id="toggle-toc"
    class="hidden md:flex h-8 w-8 items-center flex-shrink-0 bg-accent-base/10 justify-center rounded-lg text-accent-base hover:brightness-110"
    aria-label="Table of Contents"
  >
    <!-- <Icon
      aria-hidden="true"
      class="h-6 w-6"
      focusable="false"
      name="material-symbols:description-rounded"
    /> -->
    <Icon
      aria-hidden="true"
      class="h-6 w-6"
      focusable="false"
      name="material-symbols:list-alt-rounded"
    />
  </button>
  <h1
    class="ml-2 font-semibold text-accent-base text-xl md:top-4 md:z-20 line-clamp-none md:line-clamp-1 md:max-w-[calc(100%-10rem)]"
    title={content.data.title}
    data-pagefind-body
  >
    {content.data.title}
  </h1>
</div>

<div
  class="flex flex-wrap items-center text-lighter text-sm mt-[1.0625rem] mx-2 mb-2 gap-x-4 gap-y-1"
>
  <span class="flex items-center h-[1.75rem]">
    <Icon
      aria-hidden="true"
      class="flex items-center h-4 w-4 me-1"
      focusable="false"
      name="material-symbols:calendar-month-rounded"
    />
    <FormattedDate
      date={content.data.publishDate}
      dateTimeOptions={dateTimeOptions}
      class="flex flex-shrink-0"
    />
  </span>
  <!-- <Separator type="dot" /> -->
  <span class="flex items-center h-[1.75rem]">
    <Icon
      aria-hidden="true"
      class="items-center inline-block h-4 w-4 me-1"
      focusable="false"
      name="material-symbols:book-5-rounded"
    />
    {
      content.rendered?.metadata?.frontmatter?.readingTime
        ? `${content.rendered.metadata.frontmatter.readingTime}`
        : "Less than one minute read"
    }
  </span>
  {
    content.data.updatedDate && (
      <span class="h-[1.75rem] flex items-center flex-shrink-0 rounded-lg bg-accent-two/5 text-accent-two py-1 px-2 text-sm gap-x-1">
        更新于:
        <FormattedDate
          class="flex flex-shrink-0"
          date={content.data.updatedDate}
          dateTimeOptions={dateTimeOptions}
        />
      </span>
    )
  }
</div>

<p 
	class="prose max-w-none text-textColor mx-2"
	data-pagefind-body
>
	{content.data.description}
</p>


<div class="mt-4 flex flex-wrap items-center gap-2 mx-1">
	{
		content.data.tags?.length ? (
			<Icon aria-hidden="true" class="flex-shrink-0 inline-block h-6 w-6 text-accent-base" focusable="false" name="material-symbols:sell" />	
			<>
				{content.data.tags.map((tag) => (
					<a aria-label={`View all posts with the tag: ${tag}`} href={`/tags/${tag}`}>
						<Badge variant="accent-two" title={tag} />
					</a>
				))}
			</>
		) : (
			<Icon aria-hidden="true" class="flex-shrink-0 inline-block h-6 w-6 text-lightest" focusable="false" name="material-symbols:sell" />
			<span class="text-sm text-lightest">No tags</span>
		)
	}
</div>
